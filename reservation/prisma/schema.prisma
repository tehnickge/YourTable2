generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Restaurant {
  id                 Int                 @id @default(autoincrement())
  title              String
  info               String?
  shortInfo          String?
  createdAt          DateTime            @default(now())
  lastUpdate         DateTime            @default(now())
  maxHoursToRent     Decimal             @default(1)
  restaurantChain_fk Int?
  uniqueKey          String
  averageBill        Decimal?
  rating             Decimal?
  photos             String[]            @default([])
  address            Address?
  hostes            Hostes[]
  menus              Menu[]
  rents              Rent[]
  restaurantChain    RestaurantChain?    @relation(fields: [restaurantChain_fk], references: [id])
  kitchens           RestaurantKitchen[]
  reviews            Review[]
  workShedules       WorkShedule[]
  zones              Zone[]
}

model Hostes {
  id            Int        @id @default(autoincrement())
  login         String     @unique
  password      String
  restaurant_fk Int
  restaurant    Restaurant @relation(fields: [restaurant_fk], references: [id])
}

model Rent {
  id            Int        @id @default(autoincrement())
  createdAt     DateTime   @default(now())
  timeStart     DateTime
  timeEnd       DateTime
  user_fk       Int
  rentStatus    String
  restaurant_fk Int
  amountPeople  Int
  slot_fk       Int?      
  restaurant    Restaurant @relation(fields: [restaurant_fk], references: [id])
  slot          Slot?      @relation(fields: [slot_fk], references: [id], onDelete: SetNull) 
  user          User       @relation(fields: [user_fk], references: [id])
}

model Slot {
  id             Int     @id @default(autoincrement())
  maxCountPeople Int
  zone_fk        Int
  number         String
  description    String?
  rents          Rent[]
  zone           Zone    @relation(fields: [zone_fk], references: [id], onDelete: Cascade) 
}

model Zone {
  id            Int        @id @default(autoincrement())
  color         String?
  restaurant_fk Int
  description   String?
  title         String?
  slots         Slot[]
  restaurant    Restaurant @relation(fields: [restaurant_fk], references: [id])
}

model User {
  id              Int      @id @default(autoincrement())
  password        String
  photo           String?
  type            String
  createdAt       DateTime @default(now())
  historyRest     Int[]    @default([])
  wishList        Int[]    @default([])
  phoneNumber     String?  @unique
  username        String   @unique
  email           String   @unique
  recommendations Int[]    @default([])
  rents           Rent[]
  reviews         Review[]
}

model Review {
  id            Int        @id @default(autoincrement())
  restaurant_fk Int
  user_fk       Int
  comment       String?
  rating        Int
  restaurant    Restaurant @relation(fields: [restaurant_fk], references: [id])
  user          User       @relation(fields: [user_fk], references: [id])
}

model Kitchen {
  id          Int                 @id @default(autoincrement())
  title       String              @unique
  restaurants RestaurantKitchen[]
}

model RestaurantKitchen {
  id            Int        @id @default(autoincrement())
  kitchen_fk    Int
  restaurant_fk Int
  kitchen       Kitchen    @relation(fields: [kitchen_fk], references: [id])
  restaurant    Restaurant @relation(fields: [restaurant_fk], references: [id])
}

model WorkShedule {
  id            Int        @id @default(autoincrement())
  restaurant_fk Int
  day_fk        Int
  timeBegin     DateTime
  timeEnd       DateTime
  day           Day        @relation(fields: [day_fk], references: [id])
  restaurant    Restaurant @relation(fields: [restaurant_fk], references: [id])
}

model Day {
  id           Int           @id @default(autoincrement())
  title        String
  workShadules WorkShedule[]
}

model Address {
  id            Int        @id @default(autoincrement())
  city          String
  fullAddress   String
  coordinate    String?
  restaurant_fk Int        @unique
  timezone      String?
  restaurant    Restaurant @relation(fields: [restaurant_fk], references: [id])
}

model Menu {
  id            Int        @id @default(autoincrement())
  titleDish     String?
  price         Decimal?
  restaurant_fk Int
  photo         String?
  restaurant    Restaurant @relation(fields: [restaurant_fk], references: [id])
}

model RestaurantChain {
  id          Int          @id @default(autoincrement())
  title       String
  company_fk  Int
  restaurants Restaurant[]
  company     Company      @relation(fields: [company_fk], references: [id])
}

model Company {
  id               Int               @id @default(autoincrement())
  title            String            @unique
  restaurantChains RestaurantChain[]
}
